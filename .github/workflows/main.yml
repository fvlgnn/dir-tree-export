name: Build and Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    env:
      ARTIFACT_NAME: "dir_tree_export"

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, 386, arm64, arm]
        exclude:
          - goos: darwin
            goarch: 386
          - goos: darwin
            goarch: arm  # macOS non supporta armv7
          - goos: windows
            goarch: arm  # Windows ARM non standard in Go

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build Go binary
        run: |
          mkdir -p dist

          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi

          # ARM GOARM level (7 = Raspberry Pi 2/3)
          GOARM_OPT=""
          if [ "${{ matrix.goarch }}" = "arm" ]; then GOARM_OPT="GOARM=7"; fi

          OUTPUT="$ARTIFACT_NAME-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "$GOARM_OPT" != "" ]; then OUTPUT="${OUTPUT}v7"; fi

          echo "Building $OUTPUT$EXT..."

          GOOS=${{ matrix.goos }} \
          GOARCH=${{ matrix.goarch }} \
          $GOARM_OPT \
          go build -o "dist/$OUTPUT$EXT" main.go

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Dir Tree Export ${{ github.ref_name }}
          body: |
            **Dir Tree Export versione ${{ github.ref_name }}**
            Scarica la versione di `${{ env.ARTIFACT_NAME }}` per il sistema operativo e l'architettura di destinazione in base alla tabella qui sotto.
            Per Raspberry Pi 2/3, utilizzare l'architettura `linux-armv7`, mentre per Raspberry Pi 4/5 utilizzare `linux-arm64`.
            | Sistema        | Architettura | File generato                                                       |
            |----------------|--------------|---------------------------------------------------------------------|
            | Linux          | amd64        | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-linux-amd64`       |
            | Linux          | 386          | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-linux-386`         |
            | Linux          | arm (v7)     | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-linux-armv7`       |
            | Linux          | arm64        | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-linux-arm64`       |
            | Windows        | amd64        | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-windows-amd64.exe` |
            | Windows        | 386          | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-windows-386.exe`   |
            | macOS (Darwin) | amd64        | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-darwin-amd64`      |
          draft: false
          prerelease: false
          files: dist/*
