name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    env:
      ARTIFACT_NAME: "dir-tree-export"

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, 386, arm64, arm]
        exclude:
          - goos: darwin # macOS
            goarch: 386
          - goos: darwin # macOS
            goarch: arm64
          - goos: darwin
            goarch: arm  # macOS non supporta armv7
          - goos: windows
            goarch: arm  # Windows ARM non standard in Go

    steps:

      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4

      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build Go binary
        id: build
        run: |
          cd src/
          mkdir -p dist
      
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
      
          OUTPUT="$ARTIFACT_NAME-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}"
          
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            OUTPUT="${OUTPUT}v7"
            echo "Building $OUTPUT$EXT with GOARM=7..."
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} GOARM=7 go build -ldflags="-X 'main.version=${{ github.ref_name }}'" -o "dist/$OUTPUT$EXT" main.go
          else
            echo "Building $OUTPUT$EXT..."
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-X 'main.version=${{ github.ref_name }}'" -o "dist/$OUTPUT$EXT" main.go
          fi

      - name: Get last commit message
        id: last_commit
        run: echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            **Dir Tree Export ${{ github.ref_name }}**
            Scarica dagli Assets l'eseguibile compatibile con il tuo sistema operativo e l'architettura come suggerito dalla tabella seguente.
            | Sistema         | Architettura | Asset                                                               |
            |-----------------|--------------|---------------------------------------------------------------------|
            | Linux           | amd64        | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-linux-amd64`       |
            | Linux           | 386          | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-linux-386`         |
            | Linux (RPi 2/3) | arm (v7)     | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-linux-armv7`       |
            | Linux (RPi 4/5) | arm64        | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-linux-arm64`       |
            | Windows         | amd64        | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-windows-amd64.exe` |
            | Windows         | 386          | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-windows-386.exe`   |
            | macOS (Darwin)  | amd64        | `${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-darwin-amd64`      |
            ---
            üìù **Note di release:** `${{ steps.last_commit.outputs.message }}`
          draft: false
          prerelease: false
          files: src/dist/*
